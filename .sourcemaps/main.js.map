{"version":3,"sources":["../../src/mocks/providers/items.ts","../../node_modules/@angular/core/@angular lazy","../../src lazy","../../src/providers/api/api.ts","../../src/providers/auth-service.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/models/item.ts","../../src/providers/settings/settings.ts","../../src/providers/user/user.ts","../../src/app/app.component.ts","../../src/pages/pages.ts","../../src/providers/database/database-providers.ts","../../src/providers/database/models/game-session.ts","../../src/providers/database/models/user.ts","../../src/providers/database/services/user-service.ts","../../src/providers/database/services/game-session-service.ts","../../src/providers/providers.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { Item } from '../../models/item';\n\n@Injectable()\nexport class Items {\n  items: Item[] = [];\n\n  defaultItem: any = {\n    \"name\": \"Burt Bear\",\n    \"profilePic\": \"assets/img/speakers/bear.jpg\",\n    \"about\": \"Burt is a Bear.\",\n  };\n\n\n  constructor() {\n    let items = [\n      {\n        \"name\": \"Burt Bear\",\n        \"profilePic\": \"assets/img/speakers/bear.jpg\",\n        \"about\": \"Burt is a Bear.\"\n      },\n      {\n        \"name\": \"Charlie Cheetah\",\n        \"profilePic\": \"assets/img/speakers/cheetah.jpg\",\n        \"about\": \"Charlie is a Cheetah.\"\n      },\n      {\n        \"name\": \"Donald Duck\",\n        \"profilePic\": \"assets/img/speakers/duck.jpg\",\n        \"about\": \"Donald is a Duck.\"\n      },\n      {\n        \"name\": \"Eva Eagle\",\n        \"profilePic\": \"assets/img/speakers/eagle.jpg\",\n        \"about\": \"Eva is an Eagle.\"\n      },\n      {\n        \"name\": \"Ellie Elephant\",\n        \"profilePic\": \"assets/img/speakers/elephant.jpg\",\n        \"about\": \"Ellie is an Elephant.\"\n      },\n      {\n        \"name\": \"Molly Mouse\",\n        \"profilePic\": \"assets/img/speakers/mouse.jpg\",\n        \"about\": \"Molly is a Mouse.\"\n      },\n      {\n        \"name\": \"Paul Puppy\",\n        \"profilePic\": \"assets/img/speakers/puppy.jpg\",\n        \"about\": \"Paul is a Puppy.\"\n      }\n    ];\n\n    for (let item of items) {\n      this.items.push(new Item(item));\n    }\n  }\n\n  query(params?: any) {\n    if (!params) {\n      return this.items;\n    }\n\n    return this.items.filter((item) => {\n      for (let key in params) {\n        let field = item[key];\n        if (typeof field == 'string' && field.toLowerCase().indexOf(params[key].toLowerCase()) >= 0) {\n          return item;\n        } else if (field == params[key]) {\n          return item;\n        }\n      }\n      return null;\n    });\n  }\n\n  add(item: Item) {\n    this.items.push(item);\n  }\n\n  delete(item: Item) {\n    this.items.splice(this.items.indexOf(item), 1);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/mocks/providers/items.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 133;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 133\n// module chunks = 5","var map = {\n\t\"../pages/game-session/game-session.module\": [\n\t\t362,\n\t\t4\n\t],\n\t\"../pages/home/home.module\": [\n\t\t364,\n\t\t0\n\t],\n\t\"../pages/main-menu/main-menu.module\": [\n\t\t363,\n\t\t3\n\t],\n\t\"../pages/tutorial/tutorial.module\": [\n\t\t365,\n\t\t2\n\t],\n\t\"../pages/welcome/welcome.module\": [\n\t\t366,\n\t\t1\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 182;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 182\n// module chunks = 5","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n/**\n * Api is a generic REST Api handler. Set your API url first.\n */\n@Injectable()\nexport class Api {\n  url: string = 'https://example.com/api/v1';\n\n  constructor(public http: HttpClient) {\n  }\n\n  get(endpoint: string, params?: any, reqOpts?: any) {\n    if (!reqOpts) {\n      reqOpts = {\n        params: new HttpParams()\n      };\n    }\n\n    // Support easy query params for GET requests\n    if (params) {\n      reqOpts.params = new HttpParams();\n      for (let k in params) {\n        reqOpts.params.set(k, params[k]);\n      }\n    }\n\n    return this.http.get(this.url + '/' + endpoint, reqOpts);\n  }\n\n  post(endpoint: string, body: any, reqOpts?: any) {\n    return this.http.post(this.url + '/' + endpoint, body, reqOpts);\n  }\n\n  put(endpoint: string, body: any, reqOpts?: any) {\n    return this.http.put(this.url + '/' + endpoint, body, reqOpts);\n  }\n\n  delete(endpoint: string, reqOpts?: any) {\n    return this.http.delete(this.url + '/' + endpoint, reqOpts);\n  }\n\n  patch(endpoint: string, body: any, reqOpts?: any) {\n    return this.http.put(this.url + '/' + endpoint, body, reqOpts);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/api/api.ts","import { Platform, ToastController } from 'ionic-angular';\r\nimport { Facebook } from '@ionic-native/facebook'\r\n\r\nimport * as firebase from 'firebase/app';\r\nimport { AngularFireAuth } from 'angularfire2/auth';\r\nimport { Injectable } from '@angular/core';\r\nimport 'rxjs/add/operator/map';\r\nimport { HttpClient } from '@angular/common/http';\r\n//import { UserService, User } from './database/database-providers';\r\n\r\n@Injectable()\r\nexport class AuthServiceProvider {\r\n  facebookCredential: any = null;\r\n  facebookUser: any = null;\r\n\r\n  constructor(\r\n    public afAuth: AngularFireAuth,\r\n    private platform: Platform,\r\n    private facebook: Facebook,\r\n    private toastController: ToastController,\r\n    private http: HttpClient\r\n    //public userService: UserService\r\n    ) { }\r\n\r\n  signInWithFacebook(): firebase.Promise<any> {\r\n    if (this.platform.is('cordova')) {\r\n      return this.facebook.login(['email', 'public_profile']).then(res => {\r\n        this.facebookCredential = firebase.auth.FacebookAuthProvider.credential(res.authResponse.accessToken);\r\n        return this.afAuth.auth.signInWithCredential(this.facebookCredential);\r\n      });\r\n    } else {\r\n      return this.afAuth.auth.signInWithPopup(new firebase.auth.FacebookAuthProvider())\r\n      .then(res => {\r\n        this.facebookCredential = res.credential;\r\n        this.facebookUser = res.additionalUserInfo;\r\n      })\r\n      .catch(error => {\r\n        this.handleError(error);\r\n      });\r\n    }\r\n  }\r\n\r\n  signInWithEmail(email: string, password: string): any {\r\n    return this.afAuth.auth.signInWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  registerWithEmail(email: string, password: string): any {\r\n    return this.afAuth.auth.createUserWithEmailAndPassword(email, password);\r\n  }\r\n  resetPassword(email: string): any {\r\n    return this.afAuth.auth.sendPasswordResetEmail(email);\r\n  }\r\n\r\n  doLogout(): any {\r\n    return this.afAuth.auth.signOut();\r\n  }\r\n\r\n  public getMe() {\r\n    return this.callFacebookApi(\"me?fields=picture,email,id,name\");\r\n  }\r\n\r\n  public getFriends() {\r\n    return this.callFacebookApi('me/friends');\r\n  }\r\n\r\n  public callFacebookApi(path: string) {\r\n    return new Promise(resolve => {\r\n      this.http.get('https://graph.facebook.com/v2.9/' + path +\r\n        (path.indexOf('?') > 0 ? '&' : '?') + 'access_token=' +\r\n        this.facebookCredential.accessToken)\r\n        .subscribe(data => {\r\n          resolve(data);\r\n        }, error => {\r\n          this.presentToast(`Erro no acesso a Api Grafica do Facebook\r\n          :` + JSON.stringify(error));\r\n        })\r\n    });\r\n  }\r\n\r\n  public presentToast(message: string) {\r\n    let toast = this.toastController.create({\r\n      message: message,\r\n      duration: 3000\r\n    });\r\n    toast.present();\r\n  }\r\n  signOut(): void {\r\n    this.afAuth.auth.signOut();\r\n  }\r\n  private handleError(error) {\r\n    const toast = this.toastController.create({ message: error, duration: 3000, position: 'top' });\r\n    toast.present();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/auth-service.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { ErrorHandler, NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { Camera } from '@ionic-native/camera';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\nimport { IonicStorageModule, Storage } from '@ionic/storage';\r\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\r\n\r\nimport { Items } from '../mocks/providers/items';\r\nimport { Settings } from '../providers/providers';\r\nimport { User } from '../providers/providers';\r\nimport { Api } from '../providers/providers';\r\nimport { MyApp } from './app.component';\r\n\r\n// Configuration Firebase\r\nimport { FacebookModule } from 'ngx-facebook';\r\n//Modulos Firebase\r\nimport { AngularFireModule } from 'angularfire2';\r\nimport { AngularFireDatabaseModule } from 'angularfire2/database';\r\nimport { AngularFireAuthModule } from 'angularfire2/auth';\r\nimport { AuthServiceProvider } from \"../providers/auth-service\";\r\nimport { Facebook } from \"@ionic-native/facebook\";\r\nimport { UserService, GameSessionService } from '../providers/database/database-providers';\r\n\r\n// AF2 Settings\r\nexport const firebaseConfig = {\r\n  apiKey: \"AIzaSyAh3n6hFmwk9d6ydUEr8RXf8bFSX36vH8E\",\r\n  authDomain: \"memory-friends.firebaseapp.com\",\r\n  databaseURL: \"https://memory-friends.firebaseio.com\",\r\n  projectId: \"memory-friends\",\r\n  storageBucket: \"memory-friends.appspot.com\",\r\n  messagingSenderId: \"518522696281\"\r\n};\r\n\r\n// The translate loader needs to know where to load i18n files\r\n// in Ionic's static asset pipeline.\r\nexport function createTranslateLoader(http: HttpClient) {\r\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\r\n}\r\n\r\nexport function provideSettings(storage: Storage) {\r\n  /**\r\n   * The Settings provider takes a set of default settings for your app.\r\n   *\r\n   * You can add new settings options at any time. Once the settings are saved,\r\n   * these values will not overwrite the saved values (this can be done manually if desired).\r\n   */\r\n  return new Settings(storage, {\r\n    option1: true,\r\n    option2: 'Ionitron J. Framework',\r\n    option3: '3',\r\n    option4: 'Hello'\r\n  });\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MyApp\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: (createTranslateLoader),\r\n        deps: [HttpClient]\r\n      }\r\n    }),\r\n    IonicModule.forRoot(MyApp),\r\n    IonicStorageModule.forRoot(),\r\n    AngularFireModule.initializeApp(firebaseConfig),\r\n    AngularFireDatabaseModule, \r\n    AngularFireAuthModule,\r\n    FacebookModule.forRoot()    \r\n    \r\n  ],\r\n  bootstrap: [IonicApp],\r\n  entryComponents: [\r\n    MyApp\r\n  ],\r\n  providers: [\r\n    Api,\r\n    Items,\r\n    User,\r\n    Camera,\r\n    SplashScreen,\r\n    StatusBar,\r\n    { provide: Settings, useFactory: provideSettings, deps: [Storage] },\r\n    // Keep this to enable Ionic's runtime error handling during development\r\n    { provide: ErrorHandler, useClass: IonicErrorHandler },\r\n    AuthServiceProvider,\r\n    Facebook,\r\n    UserService,\r\n    GameSessionService\r\n  ]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","/**\n * A generic model that our Master-Detail pages list, create, and delete.\n *\n * Change \"Item\" to the noun your app will use. For example, a \"Contact,\" or a\n * \"Customer,\" or a \"Animal,\" or something like that.\n *\n * The Items service manages creating instances of Item, so go ahead and rename\n * that something that fits your app as well.\n */\nexport class Item {\n\n  constructor(fields: any) {\n    // Quick and dirty extend/assign fields to this model\n    for (const f in fields) {\n      this[f] = fields[f];\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/item.ts","import { Injectable } from '@angular/core';\nimport { Storage } from '@ionic/storage';\n\n/**\n * A simple settings/config class for storing key/value pairs with persistence.\n */\n@Injectable()\nexport class Settings {\n  private SETTINGS_KEY: string = '_settings';\n\n  settings: any;\n\n  _defaults: any;\n  _readyPromise: Promise<any>;\n\n  constructor(public storage: Storage, defaults: any) {\n    this._defaults = defaults;\n  }\n\n  load() {\n    return this.storage.get(this.SETTINGS_KEY).then((value) => {\n      if (value) {\n        this.settings = value;\n        return this._mergeDefaults(this._defaults);\n      } else {\n        return this.setAll(this._defaults).then((val) => {\n          this.settings = val;\n        })\n      }\n    });\n  }\n\n  _mergeDefaults(defaults: any) {\n    for (let k in defaults) {\n      if (!(k in this.settings)) {\n        this.settings[k] = defaults[k];\n      }\n    }\n    return this.setAll(this.settings);\n  }\n\n  merge(settings: any) {\n    for (let k in settings) {\n      this.settings[k] = settings[k];\n    }\n    return this.save();\n  }\n\n  setValue(key: string, value: any) {\n    this.settings[key] = value;\n    return this.storage.set(this.SETTINGS_KEY, this.settings);\n  }\n\n  setAll(value: any) {\n    return this.storage.set(this.SETTINGS_KEY, value);\n  }\n\n  getValue(key: string) {\n    return this.storage.get(this.SETTINGS_KEY)\n      .then(settings => {\n        return settings[key];\n      });\n  }\n\n  save() {\n    return this.setAll(this.settings);\n  }\n\n  get allSettings() {\n    return this.settings;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/settings/settings.ts","import 'rxjs/add/operator/toPromise';\n\nimport { Injectable } from '@angular/core';\n\nimport { Api } from '../api/api';\n\n/**\n * Most apps have the concept of a User. This is a simple provider\n * with stubs for login/signup/etc.\n *\n * This User provider makes calls to our API at the `login` and `signup` endpoints.\n *\n * By default, it expects `login` and `signup` to return a JSON object of the shape:\n *\n * ```json\n * {\n *   status: 'success',\n *   user: {\n *     // User fields your app needs, like \"id\", \"name\", \"email\", etc.\n *   }\n * }Ø\n * ```\n *\n * If the `status` field is not `success`, then an error is detected and returned.\n */\n@Injectable()\nexport class User {\n  _user: any;\n\n  constructor(public api: Api) { }\n\n  /**\n   * Send a POST request to our login endpoint with the data\n   * the user entered on the form.\n   */\n  login(accountInfo: any) {\n    let seq = this.api.post('login', accountInfo).share();\n\n    seq.subscribe((res: any) => {\n      // If the API returned a successful response, mark the user as logged in\n      if (res.status == 'success') {\n        this._loggedIn(res);\n      } else {\n      }\n    }, err => {\n      console.error('ERROR', err);\n    });\n\n    return seq;\n  }\n\n  /**\n   * Send a POST request to our signup endpoint with the data\n   * the user entered on the form.\n   */\n  signup(accountInfo: any) {\n    let seq = this.api.post('signup', accountInfo).share();\n\n    seq.subscribe((res: any) => {\n      // If the API returned a successful response, mark the user as logged in\n      if (res.status == 'success') {\n        this._loggedIn(res);\n      }\n    }, err => {\n      console.error('ERROR', err);\n    });\n\n    return seq;\n  }\n\n  /**\n   * Log the user out, which forgets the session\n   */\n  logout() {\n    this._user = null;\n  }\n\n  /**\n   * Process a login/signup response to store user data\n   */\n  _loggedIn(resp) {\n    this._user = resp.user;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/user/user.ts","import { Component, ViewChild } from '@angular/core';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Config, Nav, Platform } from 'ionic-angular';\r\n\r\nimport { FirstRunPage } from '../pages/pages';\r\nimport { Settings } from '../providers/providers';\r\n\r\n@Component({\r\n  template: `<ion-menu [content]=\"content\">\r\n    <ion-header>\r\n      <ion-toolbar>\r\n        <ion-title>Pages</ion-title>\r\n      </ion-toolbar>\r\n    </ion-header>\r\n\r\n    <ion-content>\r\n      <ion-list>\r\n        <button menuClose ion-item *ngFor=\"let p of pages\" (click)=\"openPage(p)\">\r\n          {{p.title}}\r\n        </button>\r\n      </ion-list>\r\n    </ion-content>\r\n\r\n  </ion-menu>\r\n  <ion-nav #content [root]=\"rootPage\"></ion-nav>`\r\n})\r\nexport class MyApp {\r\n  rootPage = FirstRunPage;\r\n\r\n  @ViewChild(Nav) nav: Nav;\r\n\r\n  pages: any[] = [\r\n \r\n  ]\r\n\r\n  constructor(private translate: TranslateService, private platform: Platform, settings: Settings, private config: Config, private statusBar: StatusBar, private splashScreen: SplashScreen) {\r\n    this.initTranslate();\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n    this.platform.ready().then(() => {\r\n      // Okay, so the platform is ready and our plugins are available.\r\n      // Here you can do any higher level native things you might need.\r\n      this.statusBar.styleDefault();\r\n      this.splashScreen.hide();\r\n    });\r\n  }\r\n\r\n  initTranslate() {\r\n    // Set the default language for translation strings, and the current language.\r\n    this.translate.setDefaultLang('en');\r\n\r\n    if (this.translate.getBrowserLang() !== undefined) {\r\n      this.translate.use(this.translate.getBrowserLang());\r\n    } else {\r\n      this.translate.use('en'); // Set your language here\r\n    }\r\n\r\n    this.translate.get(['BACK_BUTTON_TEXT']).subscribe(values => {\r\n      this.config.set('ios', 'backButtonText', values.BACK_BUTTON_TEXT);\r\n    });\r\n  }\r\n\r\n  openPage(page) {\r\n    // Reset the content nav to have just this page\r\n    // we wouldn't want the back button to show in this scenario\r\n    this.nav.setRoot(page.component);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","\r\n// The page the user lands on after opening the app and without a session\r\nexport const FirstRunPage = 'TutorialPage';\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/pages.ts","import { GameSession, Player } from './models/game-session';\r\nimport { User } from './models/user';\r\nimport { UserService } from './services/user-service';\r\nimport { GameSessionService } from './services/game-session-service';\r\n\r\nexport {\r\n    //Models\r\n    User,\r\n    GameSession,\r\n    Player,\r\n    //Services\r\n    UserService,\r\n    GameSessionService\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/database/database-providers.ts","import { User } from './user';\r\n\r\nexport class Player {\r\n    order : number;\r\n    score : number;\r\n    user : User;\r\n}\r\n\r\nexport class Card {\r\n    ind : number;\r\n    cardOfUser : any;\r\n}\r\n\r\nexport class Message {\r\n    id :  number;\r\n    user : User;\r\n    text : string;\r\n    time : string;\r\n}\r\n\r\nexport class GameSession {\r\n    id: number;\r\n    intervalPlay? : number;\r\n    playerTurn ?: number;\r\n    numOfPlayers? : number;\r\n    players?: Player[];\r\n    numOfCards? : number;\r\n    cards? : Card[];\r\n    messages? : Message[];\r\n    constructor() {\r\n        this.numOfPlayers = 0;\r\n        this.numOfCards  = 0;\r\n        this.playerTurn = 0;\r\n        this.players = new Array<Player>();\r\n        this.cards = new Array<Card>();\r\n        this.messages = new Array<Message>();\r\n    }\r\n\r\n    addPlayer(player: Player) {\r\n        player.order = this.numOfPlayers;\r\n        player.score = 0;\r\n        this.players.push(player);\r\n        this.numOfPlayers += 1;        \r\n    }\r\n\r\n    addCard(card: Card) {\r\n        this.numOfCards += 1;\r\n        this.cards.push(card);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/database/models/game-session.ts","export class User {\r\n\r\n    public name: string;\r\n    public email?: string;\r\n    public facebookId: string;\r\n    public friends?: any[];\r\n    public profilePic?: number;\r\n    public ranking?: number;\r\n    public userGroups?: any[];\r\n\r\n    constructor() {\r\n    }\r\n}\r\n\r\nexport class Invite {\r\n\r\n    public fromUser: User;\r\n    public toUser: User;\r\n    public gameSessionId?: string;\r\n    public confirm?: boolean;\r\n\r\n    constructor() {\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/database/models/user.ts","import { Invite } from './../models/user';\r\nimport { Injectable } from '@angular/core';\r\nimport { AngularFireDatabase } from \"angularfire2/database\";\r\n//import { User, GameSession, Player, GameSessionService } from '../database-providers';\r\nimport { ToastController, AlertController, App } from 'ionic-angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n  basePath: string = '/users';\r\n  data: any;\r\n  //currentUser: User;\r\n\r\n  constructor(\r\n    private db: AngularFireDatabase,\r\n    private toast: ToastController,\r\n    private translate: TranslateService,\r\n    private alertCtrl: AlertController,\r\n    //private gameSessionSrvc: GameSessionService,\r\n    protected app: App  \r\n  ) {\r\n    this.data = this.db.list(this.basePath)\r\n  }\r\n\r\n  /*getList(query = {}) {\r\n    return this.db.list(this.basePath);\r\n  }\r\n\r\n  get(key: string) {\r\n    const itemPath = `${this.basePath}/${key}`;\r\n    return this.db.object(itemPath);\r\n  }\r\n\r\n  set(rec: User) {\r\n    const newRec: User = {\r\n      facebookId: rec.facebookId,\r\n      name: rec.name,\r\n      profilePic: rec.profilePic\r\n    };\r\n\r\n    this.db.object(this.basePath + rec.facebookId).set(newRec)\r\n      .then(success => { this.currentUser = <User>newRec; })\r\n      .catch(error => this.handleError(error));\r\n  }\r\n\r\n  update(key: string, value: any): void {\r\n    this.data.update(key, value).catch(error => this.handleError(error))\r\n  }\r\n\r\n  delete(key: string): void {\r\n    this.data.remove(key).catch(error => this.handleError(error))\r\n  }\r\n\r\n  deleteAll(): void {\r\n    this.data.remove().catch(error => this.handleError(error))\r\n  }\r\n\r\n  sendEnvite(invite: Invite) {\r\n    return this.db.object('users/' + invite.toUser.facebookId + \"/invites/\" + invite.fromUser.facebookId)\r\n      .set(invite)\r\n      .catch(error => this.handleError(error));\r\n  }\r\n\r\n  removeEnvite(invite: Invite) {\r\n    this.db.object('users/' + invite.toUser.facebookId + \"/invites/\" + invite.fromUser.facebookId).remove()\r\n      .catch(error => this.handleError(error));\r\n  }\r\n\r\n\r\n  receiveEnvite(invite: Invite) {\r\n    this.db.object('users/' + invite.toUser.facebookId + \"/invites/\" + invite.fromUser.facebookId)\r\n      .set(invite)\r\n      .catch(error => this.handleError(error));\r\n  }\r\n\r\n  receiveInvite(invite: Invite) {\r\n\r\n    this.translate.get([\r\n      \"DO_YOU_RECEIVE_INVITE_A_FRIEND\",\r\n      \"DO_YOU_RECEIVE_INVITE_A_FRIEND_MESSAGE\",\r\n      \"DO_YOU_RECEIVE_CONFIRM_INVITE_A_FRIEND\",\r\n      \"DO_YOU_RECEIVE_CONFIRM_INVITE_A_FRIEND_MESSAGE\",\r\n      \"START_BUTTON\",\r\n      \"NOT_NOW_BUTTON\",\r\n    ]\r\n      , { value: invite.fromUser.name }).subscribe(\r\n      (values) => {\r\n        let confirm = this.alertCtrl.create({\r\n          title: invite.gameSessionId ? values.DO_YOU_RECEIVE_CONFIRM_INVITE_A_FRIEND : values.DO_YOU_RECEIVE_INVITE_A_FRIEND,\r\n          message: invite.gameSessionId ? values.DO_YOU_RECEIVE_CONFIRM_INVITE_A_FRIEND_MESSAGE : values.DO_YOU_RECEIVE_INVITE_A_FRIEND_MESSAGE,\r\n          buttons: [\r\n            {\r\n              text: values.NOT_NOW_BUTTON,\r\n              handler: () => {\r\n                this.removeEnvite({ toUser: this.currentUser, fromUser: invite.fromUser });\r\n              }\r\n            },\r\n            {\r\n              text: values.START_BUTTON,\r\n              handler: () => {\r\n                this.removeEnvite({ toUser: this.currentUser, fromUser: invite.fromUser });\r\n\r\n                let gameSession = new GameSession();\r\n\r\n                if (!invite.gameSessionId) {\r\n                  var player = new Player();\r\n                  gameSession.addPlayer(player);\r\n                  this.gameSessionSrvc.create(gameSession).then(\r\n                    gameSession => {\r\n                      let inviteResponse: Invite = {\r\n                        fromUser: this.currentUser,\r\n                        toUser: invite.fromUser,\r\n                        gameSessionId: gameSession.key\r\n                      };\r\n                      this.sendEnvite(inviteResponse).catch(error => this.handleError(error));\r\n                    }\r\n                  );\r\n                } else {\r\n                  this.gameSessionSrvc.get(invite.gameSessionId).subscribe(\r\n                    gameSession => {\r\n                      if (!invite.confirm) {\r\n                        let inviteResponse: Invite = {\r\n                          fromUser: this.currentUser,\r\n                          toUser: invite.fromUser,\r\n                          gameSessionId: invite.gameSessionId,\r\n                          confirm: true\r\n                        };\r\n                        this.sendEnvite(inviteResponse).catch(error => this.handleError(error));\r\n                      }\r\n                      this.app.getRootNav().push('GameSessionPage', invite.gameSessionId);\r\n                    }\r\n                  )\r\n                }\r\n              }\r\n            }\r\n          ]\r\n        });\r\n        confirm.present();\r\n      })\r\n  }\r\n*/\r\n  private handleError(error) {\r\n    const toast = this.toast.create({ message: error, duration: 3000, position: 'top' });\r\n    toast.present();\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/database/services/user-service.ts","import { Injectable } from '@angular/core';\r\nimport { AngularFireDatabase } from \"angularfire2/database\";\r\nimport { User , GameSession , Player} from '../database-providers';\r\nimport { ToastController, AlertController } from 'ionic-angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Injectable()\r\nexport class GameSessionService {\r\n  basePath: string = '/game-sessions';\r\n  data;\r\n  currentUser: any;\r\n\r\n  constructor(\r\n    public db: AngularFireDatabase,\r\n    public toast: ToastController,\r\n    public translate: TranslateService,\r\n    public alertCtrl: AlertController\r\n  ) {\r\n    this.data = this.db.list(this.basePath)\r\n  }\r\n/*\r\n  getList(query = {}) {\r\n    return this.db.list(this.basePath);\r\n  }\r\n\r\n  get(key: string){\r\n    const itemPath = `${this.basePath}/${key}`;\r\n    return this.db.object(itemPath);\r\n  }\r\n\r\n  create(rec) {\r\n    return this.data.push(rec);\r\n  }\r\n\r\n  update(key: string, value: any): void {\r\n    this.data.update(key, value).catch(error => this.handleError(error))\r\n  }\r\n\r\n  delete(key: string): void {\r\n    this.data.remove(key).catch(error => this.handleError(error))\r\n  }\r\n\r\n  deleteAll(): void {\r\n    this.data.remove().catch(error => this.handleError(error))\r\n  }\r\n\r\n  private handleError(error) {\r\n    const toast = this.toast.create({ message: error, duration: 3000, position: 'top' });\r\n    toast.present();\r\n  }\r\n*/\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/database/services/game-session-service.ts","import { Api } from './api/api';\nimport { Items } from '../mocks/providers/items';\nimport { Settings } from './settings/settings';\nimport { User } from './user/user';\n\nexport {\n    Api,\n    Items,\n    Settings,\n    User\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/providers.ts"],"sourceRoot":""}