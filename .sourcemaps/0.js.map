{"version":3,"sources":["../../src/pages/game-session/game-session.module.ts","../../src/components/flash-card/flash-card.ts","../../src/components/game-play/game-play.ts","../../src/components/simple-user-card/simple-user-card.ts","../../src/components/select-cards/select-cards.ts","../../src/components/select-num-cards/select-num-cards.ts","../../src/components/player-card/player-card.ts","../../src/components/chat-bubble/chat-bubble.ts","../../src/pages/game-session/game-session.ts","../../src/components/flash-user-card/flash-user-card.ts","../../src/components/progress-bar/progress-bar.ts"],"names":[],"mappings":"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","file":"0.js","sourcesContent":["import { GamePlayComponent } from './../../components/game-play/game-play';\nimport { FlashCardComponent } from './../../components/flash-card/flash-card';\nimport { SimpleUserCardComponent } from './../../components/simple-user-card/simple-user-card';\nimport { SelectCardsComponent } from './../../components/select-cards/select-cards';\nimport { SelectNumCardsComponent } from './../../components/select-num-cards/select-num-cards';\nimport { PlayerCardComponent } from './../../components/player-card/player-card';\nimport { ChatBubbleComponent } from './../../components/chat-bubble/chat-bubble';\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { GameSessionPage } from './game-session';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FlashUserCardComponent } from '../../components/flash-user-card/flash-user-card';\nimport { ProgressBarComponent } from '../../components/progress-bar/progress-bar';\n\n@NgModule({\n  declarations: [\n    GameSessionPage,\n    ChatBubbleComponent,\n    PlayerCardComponent,\n    SelectNumCardsComponent,\n    SelectCardsComponent,\n    SimpleUserCardComponent,\n    FlashUserCardComponent,\n    FlashCardComponent,\n    GamePlayComponent,\n    ProgressBarComponent    \n    ],\n  imports: [\n    IonicPageModule.forChild(GameSessionPage),\n    TranslateModule.forChild()    \n  ],\n  exports: [\n    GameSessionPage\n  ]\n})\nexport class GameSessionPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/game-session/game-session.module.ts","import { Component } from '@angular/core';\n\n@Component({\n  inputs:['flipped:flipped','disabled:disabled'],\n  selector: 'flash-card',\n  templateUrl: 'flash-card.html'\n})\nexport class FlashCardComponent {\n\n  flipped: boolean = false;\n  disabled: boolean = false;\n  \n  constructor() {\n\n  }\n\n  flip(){\n    if (!this.disabled) {\n      this.flipped = !this.flipped;\n    }\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/flash-card/flash-card.ts","import { GameSession, Friend, Player, Card } from './../../providers/database/models/game-session';\nimport { AuthServiceProvider } from './../../providers/auth-service';\nimport { UserService } from './../../providers/database/services/user-service';\nimport { GameSessionService } from './../../providers/database/services/game-session-service';\nimport { Component, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  inputs: ['gameSession:gameSession', 'currentPlayerIndex: currentPlayerIndex', 'gameSessionKey: gameSessionKey'],\n  selector: 'game-play',\n  templateUrl: 'game-play.html'\n})\nexport class GamePlayComponent {\n  @Output() changeTurn = new EventEmitter();\n  @Output() restartTimePlay = new EventEmitter();\n  \n  friends: Friend[] = [];\n  friendsPlaceHolder: Friend[] = [];\n  selectedCards = []\n  currentPlayerIndex: number;\n  gameSession: GameSession;\n  gameSessionKey: string;\n  doneFired: boolean;\n\n  constructor(\n    public gameSessionSrvc: GameSessionService,\n    public userSrvc: UserService,\n    public authSrvc: AuthServiceProvider\n  ) {\n  }\n  selectCard(card: Card) {\n\n    setTimeout(() => {\n      card.flipped = !card.flipped;\n      this.gameSessionSrvc.setValue(`${this.gameSessionKey}/cards/${card.ind}`, card)\n        .then(() => {\n          let cardId: string;\n          this.gameSession.cards.filter(x => x.flipped && !x.resolved).forEach((card: Card) => {\n            if (cardId) {\n              if (cardId == card.card.id) {\n                this.resolveCards(this.gameSession.cards.filter(x => x.flipped && !x.resolved));\n              } else {\n                this.unFlipCards(this.gameSession.cards.filter(x => x.flipped && !x.resolved));\n              }\n            } else {\n              cardId = card.card.id;\n            }\n          });\n        })\n\n    }, 1000);\n  }\n\n  resolveCards(cards: Card[]) {\n    cards.forEach((card: Card) => {\n      card.resolved = true;\n      this.gameSessionSrvc.setValue(`${this.gameSessionKey}/cards/${card.ind}`, card)\n    })\n    let score: number = 0\n    if (this.gameSession.players[this.currentPlayerIndex].score) {\n      score = this.gameSession.players[this.currentPlayerIndex].score\n    }\n    score++\n    this.gameSessionSrvc.setValue(`${this.gameSessionKey}/players/${this.currentPlayerIndex}/score`, score)\n    this.restartTimePlay.emit();\n  }\n\n  unFlipCards(cards: Card[]) {\n    cards.forEach((card: Card) => {\n      card.flipped = false;\n      this.gameSessionSrvc.setValue(`${this.gameSessionKey}/cards/${card.ind}`, card)\n    })\n    this.changeTurn.emit();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/game-play/game-play.ts","import { Friend } from './../../providers/database/models/game-session';\nimport { Component, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  inputs: ['user:user','disabled:disabled'],\n  selector: 'simple-user-card',\n  templateUrl: 'simple-user-card.html',\n})\nexport class SimpleUserCardComponent {\n  @Output() selectCard = new EventEmitter();\n  user: Friend;\n  disabled: boolean;\n  constructor() {\n\n  }\n  select() {\n    if (this.user.selected || this.disabled) return;\n    this.user.selected = !this.user.selected;\n    this.selectCard.emit(this.user.selected);    \n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/simple-user-card/simple-user-card.ts","import { GameSession, Friend } from './../../providers/database/models/game-session';\nimport { AuthServiceProvider } from './../../providers/auth-service';\nimport { UserService } from './../../providers/database/services/user-service';\nimport { GameSessionService } from './../../providers/database/services/game-session-service';\nimport { Component, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  inputs: ['gameSession:gameSession', 'currentPlayerIndex: currentPlayerIndex', 'gameSessionKey: gameSessionKey'],\n  selector: 'select-cards',\n  templateUrl: 'select-cards.html'\n})\nexport class SelectCardsComponent {\n  @Output() done = new EventEmitter();\n\n  friends: Friend[] = [];\n  selectedCards = []\n  currentPlayerIndex: number;\n  gameSession: GameSession;\n  gameSessionKey: string;\n  doneFired: boolean;\n  constructor(\n    public gameSessionSrvc: GameSessionService,\n    public userSrvc: UserService,\n    public authSrvc: AuthServiceProvider\n  ) {\n    if (!this.authSrvc.facebookCredential) {\n      this.authSrvc.loadFacebookCredentials().then(() => {\n        this.load();\n      })\n    } else {\n      this.load();\n    }\n  }\n  load() {\n    this.userSrvc.loadFriends();\n    this.friends = this.userSrvc.friends;\n  }\n\n  cardSelected(card: Friend): boolean {\n    let selected = false;\n    this.gameSession.players.forEach(player => {\n      if (player.cards) {\n        player.cards.forEach(x => {\n          if (x.id == card.id) {\n            selected = true;\n            return;\n          }\n        });\n        if (selected) {\n          return;\n        }\n      }\n    })\n    return selected;\n  }\n\n  select(card: Friend, select, index: number) {\n    if (!(this.selectedCards.length < (this.gameSession.numOfCards.numCards / 4))) {\n      card.selected = false;\n      return;\n    }\n\n    if (this.cardSelected(card)) {\n      this.friends.forEach(y => {\n        if (y.id == card.id) {\n          y.selected = true;\n          return;\n        }\n      });\n      return;\n    }\n\n    if (select) {\n      let newCard: Friend = {\n        id: card.id,\n        name: card.name,\n        picture: card.picture,\n        selected: false\n      };\n      this.selectedCards.push(newCard);\n      this.friends[index].selected = true;\n\n      this.gameSessionSrvc.setAllPlayersCard(this.gameSessionKey, this.currentPlayerIndex, this.selectedCards);\n    }\n  }\n\n  unSelect(card: Friend, cardIndex) {\n    this.friends.forEach(x => {\n      if (x.name == card.name) {\n        x.selected = false;\n        return;\n      }\n    });\n\n    if (this.selectedCards.length > 1) {\n      this.selectedCards.splice(cardIndex, 1);\n    } else {\n      this.selectedCards = [];\n    }\n    this.gameSessionSrvc.setAllPlayersCard(this.gameSessionKey, this.currentPlayerIndex, this.selectedCards);\n  }\n\n  doneButton() {\n    this.doneFired = true;\n    this.done.emit(true);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/select-cards/select-cards.ts","import { AuthServiceProvider } from './../../providers/auth-service';\nimport { UserService } from './../../providers/database/services/user-service';\nimport { GameSessionService } from './../../providers/database/services/game-session-service';\nimport { Component, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  inputs:['gameSession:gameSession'],\n  selector: 'select-num-cards',\n  templateUrl: 'select-num-cards.html'\n})\nexport class SelectNumCardsComponent {\n  friends = []\n  @Output() selectNumCard = new EventEmitter();\n  \n  constructor(\n    public gameSessionSrvc: GameSessionService,\n    public userSrvc: UserService,\n    public authSrvc: AuthServiceProvider\n  ) {\n    \n  }\n\n  set(numCard):void {\n    this.selectNumCard.emit(numCard);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/select-num-cards/select-num-cards.ts","import { Component } from '@angular/core';\n\n/**\n * Generated class for the PlayerCardComponent component.\n *\n * See https://angular.io/api/core/Component for more info on Angular\n * Components.\n */\n@Component({\n  inputs: ['player:player','selected:selected','progress:progress'],\n  selector: 'player-card',\n  templateUrl: 'player-card.html'\n})\nexport class PlayerCardComponent {\n\n  progress:number;\n  constructor() {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/player-card/player-card.ts","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'chat-bubble',\n  inputs: ['msg: message','player: player','currentPlayerIndex: currentPlayerIndex'],  \n  templateUrl: 'chat-bubble.html'\n})\nexport class ChatBubbleComponent {\n  constructor() {\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chat-bubble/chat-bubble.ts","import { NumCards, Friend, Player } from './../../providers/database/models/game-session';\nimport { AuthServiceProvider } from './../../providers/auth-service';\nimport { GameSession, UserService } from './../../providers/database/database-providers';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Component, Input } from '@angular/core';\nimport { IonicPage, NavController, NavParams, MenuController, ToastController } from 'ionic-angular';\nimport { GameSessionService } from '../../providers/database/services/game-session-service';\nimport { Message, Steps, Card } from '../../providers/database/models/game-session';\n\n@IonicPage()\n@Component({\n  selector: 'page-game-session',\n  templateUrl: 'game-session.html',\n})\nexport class GameSessionPage {\n\n  message\n  gameSession: GameSession;\n  currentPlayerIndex: number;\n  gameSessionKey: string;\n  numCards: NumCards;\n  messages: Message[] = [];\n  interval;\n  progress: number;\n\n  friendsPlaceHolder: Friend[] = [];\n  constructor(public navCtrl: NavController,\n    public navParams: NavParams,\n    private authServiceProvider: AuthServiceProvider,\n    private translate: TranslateService,\n    private gameSessionSrvc: GameSessionService,\n    private menuCtrl: MenuController,\n    public userSrvc: UserService,\n    private toast: ToastController\n  ) {\n    this.gameSessionSrvc.observe(this.navParams.data).subscribe(gameSession => {\n      //this.gameSessionSrvc.observe('-KvxiBCiyftD646SKypR').subscribe(gameSession => {\n      this.gameSession = gameSession;\n      //console.log(this.gameSession);\n      if (!this.currentPlayerIndex) {\n        this.currentPlayerIndex = this.gameSession.players.findIndex(x => x.user.facebookId == this.userSrvc.currentUser.facebookId);\n        //this.currentPlayerIndex = 0;\n      }\n      if (!this.gameSessionKey) {\n        let parseKey: any = this.gameSession;\n        this.gameSessionKey = parseKey.$key;\n      }\n      this.gameSessionSrvc.startListenerMenssages(this.gameSessionKey, this.currentPlayerIndex);\n      const path = `${this.gameSessionSrvc.basePath}/${this.gameSessionKey}/step`;      \n      this.stepChange()\n    });\n    \n  }\n  stepChange() {\n    const path = `${this.gameSessionSrvc.basePath}/${this.gameSessionKey}/step`;\n    this.gameSessionSrvc.db.object(path).$ref.on('value', (step) => {\n      if (step.val() == Steps.Game) {\n        setTimeout(() => {\n          this.gameSessionSrvc.setValue(`${this.gameSessionKey}/playerTurn`, 0)\n          this.listernerChangeTurn(true);\n          this.startTimerPlay();          \n        }, 1000);\n      } else {\n        this.listernerChangeTurn(false);  \n        if (this.interval) {\n          clearInterval(this.interval);\n        }\n      }\n    });   \n  }\n  gameMenu() {\n    this.menuCtrl.toggle('messages');\n  }\n\n  sendMessage(text) {\n    if (!text) return;\n    let id = 0;\n    if (this.gameSession.messages) {\n      id = this.gameSession.messages.length;\n    }\n    this.gameSessionSrvc.sendMessage(this.gameSessionKey, id,\n      <Message>{\n        id: id,\n        playerIndex: this.currentPlayerIndex,\n        text: text,\n        time: Date.now().toString()\n      }\n    ).catch(error => this.handleError(error))\n  }\n  setNumCard(numCards: NumCards) {\n    this.numCards = numCards;\n    this.friendsPlaceHolder = [];\n    for (var i = 0; i < (numCards.numCards / 4); i++) {\n      this.friendsPlaceHolder.push({\n        id: '0',\n        name: ' ',\n        picture: ' '\n      })\n\n    }\n    this.gameSessionSrvc.setValue(`${this.gameSessionKey}/friendsPlaceHolder`, this.friendsPlaceHolder);\n    this.gameSessionSrvc.setValue(`${this.gameSessionKey}/numOfCards`, numCards);\n    this.gameSessionSrvc.setValue(`${this.gameSessionKey}/step`, Steps.SelectCard);\n  }\n  playerReady($event) {\n    this.gameSessionSrvc.setValue(`${this.gameSessionKey}/players/${this.currentPlayerIndex}/ready`, true)\n      .then(() => {\n        if (this.gameSession.players[0].ready && this.gameSession.players[1].ready) {\n          this.startGame();\n        }\n      });\n  }\n\n  startGame() {\n    let friendArray: Friend[] = [];\n    this.gameSession.players.forEach((player: Player) => {\n      player.cards.forEach((friend: Friend) => {\n        friendArray.push(friend);\n      })\n    })\n    let indexArray: number[] = [];\n    let index = 0;\n\n    for (const item of friendArray) {\n      indexArray.push(index)\n      index++;\n    }\n    index = 0;\n    for (const item of friendArray) {\n      indexArray.push(index)\n      index++;\n    }\n\n    this.shuffle(indexArray);\n\n    let cards: Card[] = [];\n    index = 0;\n    for (const item of indexArray) {\n      let card: Card = {\n        ind: index,\n        card: friendArray[item]\n      }\n      cards.push(card);\n      index++;\n    }\n\n    this.gameSessionSrvc.setValue(`${this.gameSessionKey}/cards`, cards).then(() => {\n      this.gameSessionSrvc.setValue(`${this.gameSessionKey}/step`,  Steps.Game );\n    });\n\n  }\n\n  shuffle(a) {\n    var j, x, i;\n    for (i = a.length; i; i--) {\n      j = Math.floor(Math.random() * i);\n      x = a[i - 1];\n      a[i - 1] = a[j];\n      a[j] = x;\n    }\n  }\n\n  listernerChangeTurn(on:boolean) {\n    const path = `${this.gameSessionSrvc.basePath}/${this.gameSessionKey}/playerTurn`;\n    if (on) {\n      this.gameSessionSrvc.db.object(path).$ref.on('value', (turn) => {\n        //console.log('turn changed:' + turn.val());\n        if (this.interval) {\n          setTimeout(() => {\n            clearInterval(this.interval);                      \n          },1000)\n        }\n        this.startTimerPlay();\n      });\n    } else {\n      this.gameSessionSrvc.db.object(path).$ref.off('value');        \n    }\n  }\n\n  startTimerPlay() {\n    this.progress = 100;\n    this.interval = setInterval(() => {\n      this.progress--\n      console.log(`progress:${this.progress}`)\n      if (this.progress == 0) {\n        clearInterval(this.interval);\n        setTimeout(() => {\n          this.changeTurn();          \n        },1000)\n      }\n    }, 1000)\n  }\n\n  restartTimePlay() {\n    clearInterval(this.interval);\n    this.startTimerPlay()    \n  }\n\n  changeTurn() {\n    if (this.currentPlayerIndex == 0) {\n      this.gameSessionSrvc.setValue(`${this.gameSessionKey}/playerTurn`, 1);\n    } else {\n      this.gameSessionSrvc.setValue(`${this.gameSessionKey}/playerTurn`, 0);\n    }\n    clearInterval(this.interval);\n    this.startTimerPlay();    \n  }\n\n  private handleError(error) {\n    const toast = this.toast.create({ message: error, duration: 3000, position: 'top' });\n    toast.present();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/game-session/game-session.ts","import { GameSessionService } from './../../providers/database/services/game-session-service';\nimport { Friend, Card } from './../../providers/database/models/game-session';\nimport { Component, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  inputs: ['card:card','disabled:disabled'],\n  selector: 'flash-user-card',\n  templateUrl: 'flash-user-card.html',\n})\nexport class FlashUserCardComponent {\n  @Output() selectCard = new EventEmitter();\n  card: Card;\n  disabled: boolean;\n  placeholder: Friend ={\n    id:'',\n    name: '',\n    picture: ''\n  };\n  constructor(\n    public gameSessionSrvc:GameSessionService\n  ) {\n\n  }\n  select() {\n    if (this.card.flipped || this.card.resolved || this.disabled) return;\n    this.selectCard.emit(this.card);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/flash-user-card/flash-user-card.ts","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'progress-bar',\n  templateUrl: 'progress-bar.html'\n})\nexport class ProgressBarComponent {\n\n  @Input('progress') progress;\n  @Input('hidden') hidden;\n  \n  constructor() {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/progress-bar/progress-bar.ts"],"sourceRoot":""}