{"version":3,"sources":["../../src/pages/game-session/game-session.module.ts","../../src/components/select-num-cards/select-num-cards.ts","../../src/components/player-card/player-card.ts","../../src/components/chat-bubble/chat-bubble.ts","../../src/pages/game-session/game-session.ts"],"names":[],"mappings":"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","file":"0.js","sourcesContent":["import { SelectNumCardsComponent } from './../../components/select-num-cards/select-num-cards';\nimport { PlayerCardComponent } from './../../components/player-card/player-card';\nimport { ChatBubbleComponent } from './../../components/chat-bubble/chat-bubble';\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { GameSessionPage } from './game-session';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  declarations: [\n    GameSessionPage,\n    ChatBubbleComponent,\n    PlayerCardComponent,\n    SelectNumCardsComponent\n  ],\n  imports: [\n    IonicPageModule.forChild(GameSessionPage),\n    TranslateModule.forChild()    \n  ],\n  exports: [\n    GameSessionPage\n  ]\n})\nexport class GameSessionPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/game-session/game-session.module.ts","import { AuthServiceProvider } from './../../providers/auth-service';\nimport { UserService } from './../../providers/database/services/user-service';\nimport { GameSessionService } from './../../providers/database/services/game-session-service';\nimport { Component } from '@angular/core';\n\n@Component({\n  inputs:['gameSession:gameSession'],\n  selector: 'select-num-cards',\n  templateUrl: 'select-num-cards.html'\n})\nexport class SelectNumCardsComponent {\n  friends = []\n  constructor(\n    public gameSessionSrvc: GameSessionService,\n    public userSrvc: UserService,\n    public authSrvc: AuthServiceProvider\n  ) {\n    if (!this.authSrvc.facebookCredential) {\n      this.authSrvc.loadFacebookCredentials().then(() => {\n        this.authSrvc.getFriends().then((res: any) => {\n          let friends = res.data;\n          friends.forEach(friend =>{\n            this.authSrvc.getUser(friend.id).then(user => this.friends.push(user))\n          })\n        })\n      })\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/select-num-cards/select-num-cards.ts","import { Component } from '@angular/core';\n\n/**\n * Generated class for the PlayerCardComponent component.\n *\n * See https://angular.io/api/core/Component for more info on Angular\n * Components.\n */\n@Component({\n  inputs: ['player:player'],\n  selector: 'player-card',\n  templateUrl: 'player-card.html'\n})\nexport class PlayerCardComponent {\n\n  text: string;\n\n  constructor() {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/player-card/player-card.ts","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'chat-bubble',\n  inputs: ['msg: message','player: player','currentPlayerIndex: currentPlayerIndex'],  \n  templateUrl: 'chat-bubble.html'\n})\nexport class ChatBubbleComponent {\n  constructor() {\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chat-bubble/chat-bubble.ts","import { AuthServiceProvider } from './../../providers/auth-service';\nimport { GameSession, UserService } from './../../providers/database/database-providers';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Component, Input } from '@angular/core';\nimport { IonicPage, NavController, NavParams, MenuController, ToastController } from 'ionic-angular';\nimport { GameSessionService } from '../../providers/database/services/game-session-service';\nimport { Message, Steps } from '../../providers/database/models/game-session';\n\n@IonicPage()\n@Component({\n  selector: 'page-game-session',\n  templateUrl: 'game-session.html',\n})\nexport class GameSessionPage {\n  message\n  gameSession: GameSession;\n  currentPlayerIndex: number;\n  gameSessionKey: string;\n\n  constructor(public navCtrl: NavController,\n    public navParams: NavParams,\n    private authServiceProvider: AuthServiceProvider,\n    private translate: TranslateService,\n    private gameSessionSrvc: GameSessionService,\n    private menuCtrl: MenuController,\n    public userSrvc: UserService,\n    private toast: ToastController\n  ) {\n    //this.gameSessionSrvc.observe(this.navParams.data).subscribe(gameSession => {\n    this.gameSessionSrvc.observe('-KvrQTgKLzRXqlZWjp1F').subscribe(gameSession => {\n      this.gameSession = gameSession;\n      console.log(this.gameSession);\n      if (!this.currentPlayerIndex) {\n        //this.indexPlayer = this.gameSession.players.findIndex( x => x.user.facebookId == this.userSrvc.currentUser.facebookId);\n        this.currentPlayerIndex = 0;\n      }\n      if (!this.gameSessionKey) {\n        let parseKey: any = this.gameSession;\n        this.gameSessionKey = parseKey.$key;\n      }\n      this.gameSessionSrvc.startListenerMenssages(this.gameSessionKey, this.currentPlayerIndex);\n    });\n  }\n\n  gameMenu() {\n    console.log('menu')\n    this.menuCtrl.toggle('messages');\n  }\n\n  sendMessage(text) {\n    if (!text) return;\n    let id = 0;\n    if (this.gameSession.messages){\n      id = this.gameSession.messages.length;\n    }\n    this.gameSessionSrvc.sendMessage(this.gameSessionKey,id,\n      <Message>{\n        playerIndex: this.currentPlayerIndex,\n        text: text,\n        time: Date.now().toString()\n      }\n    ).catch(error => this.handleError(error))\n  }\n\n  private handleError(error) {\n    const toast = this.toast.create({ message: error, duration: 3000, position: 'top' });\n    toast.present();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/game-session/game-session.ts"],"sourceRoot":""}